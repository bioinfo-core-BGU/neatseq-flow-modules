
Description: |
    A pipeline for basic QIIME2 workflow from reads
    ---------------------------------------------------
    
    This workflow is based on the data described in Structural and compositional mismatch between captive and wild Atlantic salmon (Salmo salar) parrs gut microbiota highlights the relevance of integrating molecular ecology for management and conservation methods.
    
    The data for the workflow is available on `datadryad <https://datadryad.org/resource/doi:10.5061/dryad.5ff8m0q>`_.
    
Global_params:
    Default_wait:   10
    Qsub_opts:      -V -cwd -notify
    Qsub_q:         queue.q
    # Qsub_nodes:     
    Qsub_path:      /storage/SGE6U8/bin/lx24-amd64
    conda:
        path:   {Vars.conda.path}
        env:    {Vars.conda.env}    
    module_path:    ../neatseq_flow_modules
    setenv:         'LD_LIBRARY_PATH="{Vars.conda.env}/lib:$$LD_LIBRARY_PATH" R_LIBS="{Vars.conda.env}/lib/R/library"'

Vars:
    conda:  
        path:
        env:            qiime2-2019.4
    paths:
        fastqc:         fastqc
        multiqc:        multiqc
        trimgal:        trim_galore
        cutadapt:       cutadapt
    QIIME:
        classifier:     https://data.qiime2.org/2019.4/common/gg-13-8-99-515-806-nb-classifier.qza
        sampling_depth: XXXX
        type:           SampleData[PairedEndSequencesWithQuality]   # For single end reads, 'SampleData[SequencesWithQuality]'
        input_format:   PairedEndFastqManifestPhred33   # Note: use the correct format! XXXEndFastqManifestPhredYYY where XXX is 'Paired' or 'Single' and YYY is '33' or '64'.
        dada2_method:   denoise-single   # For paired-end reads, you can use 'denoise-paired'. 
    
Step_params:
    # Get the reads and metadata file
    MergeReads:
        module:   Import
        scope:
        script_path:
        tag:            QC
        stop_and_show:

    # Get the classifier object
    Get_Project_Files:
        module:         Fillout_Generic
        base:           MergeReads
        scope:          project
        script_path:    |
            curl -L {Vars.QIIME.classifier} > {{o:TaxonomicClassifier}}
        output:
            TaxonomicClassifier:
                scope:  project
                string: "{{base_dir}}/{{project}}classifier.qza"
        # stop_and_show:
        
    FastQC_Merge:
        module:         fastqc_html
        base:           Get_Project_Files
        script_path:    {Vars.paths.fastqc}
        setenv:         PERL5LIB=""
        qsub_params:
            -pe:        shared 15
        redirects:
            --threads:  15
        conda:  
            path:
            env:        QC
    TrimGalore: 
        module:         Trim_Galore
        base:           Get_Project_Files
        script_path:    {Vars.paths.trimgal}
        cutadapt_path:  {Vars.paths.cutadapt}
        setenv:         PERL5LIB=""
        redirects:
            --length:   150
            --quality:  20 # Parameters for running Trim Galore
            --max_n:    1
            --trim-n:
        conda:  
            path:
            env:        QC

    FastQC_TrimGal:
        module:         fastqc_html
        base:           TrimGalore
        script_path:    {Vars.paths.fastqc}
        setenv:         PERL5LIB=""
        qsub_params:
            -pe:        shared 15
        redirects:
            --threads:  15
        conda:  
            path:
            env:        QC

    MultiQC_TrimGal:
        module:         Multiqc
        base:           FastQC_TrimGal
        script_path:    {Vars.paths.multiqc}        
        redirects:
            --interactive:
        conda:  
            path:
            env:        QC

    
    import:
        module:                     qiime2_import
        base:                       TrimGalore  
        script_path:                qiime tools import
        tag:                        qiime
        redirects:
            --type:                 {Vars.QIIME.type}
            --input-format:         {Vars.QIIME.input_format}
        # stop_and_show:
        
    sequence_qual:
        module:                     qiime2_general
        base:                       import
        script_path:                qiime demux summarize 
        # stop_and_show:

    dada2:
        module:                     qiime2_general
        base:                       import
        script_path:                'qiime dada2 {Vars.QIIME.dada2_method}'
        qsub_params:
            -pe:            shared 60
        export_o_params:
            - --o-denoising-stats
        redirects:
            --p-trunc-q:           20 
            # --p-chimera-method:    none 
            --p-trim-left:         7 
            --p-trunc-len:         275
            --p-n-threads:          60
            --verbose:
        # stop_and_show:
        
        
    dada2_vis_summary:
        module:                     qiime2_general
        base:                       dada2
        script_path:                qiime feature-table summarize
        export_o_params:
                    
    dada2_vis_tabulate:
        module:                     qiime2_general
        base:                       dada2
        script_path:                qiime feature-table tabulate-seqs 
        export_o_params:
        
    # Filtering out features in less than halp the samples
    remove_metadata:                # Sample metadata interferes with filter...
        module:                     manage_types
        base:                       dada2
        script_path:
        operation:                  del
        type:                       metadata
        scope:                      project
        
    filter_feature_table:
        module:                     qiime2_general
        base:                       remove_metadata
        script_path:                qiime feature-table filter-features
        redirects:
            --p-min-frequency:      10
            --p-min-samples:        3
    
    filtered_vis_summary:
        module:                     qiime2_general
        base:                       filter_feature_table
        script_path:                qiime feature-table summarize
        export_o_params:
                    
    filtered_vis_tabulate:
        module:                     qiime2_general
        base:                       filter_feature_table
        script_path:                qiime feature-table tabulate-seqs 
        export_o_params:
        
            
    phylogeny:
        module:                     qiime2_general
        base:                       dada2   #filter_samples
        script_path:                qiime phylogeny align-to-tree-mafft-fasttree
        # stop_and_show:
        
    diversity:
        module:                     qiime2_general
        base:                       phylogeny
        script_path:                qiime diversity core-metrics-phylogenetic
        tag:                        needs_sampling_depth
        store_output:
            - --o-rarefied-table
            - --o-faith-pd-vector       # Faith's PD is stored in 'SampleData[AlphaDiversity]' slot
            - --o-weighted-unifrac-distance-matrix
            - --o-weighted-unifrac-pcoa-results
            - --o-weighted-unifrac-emperor
        redirects:
            --p-sampling-depth:     {Vars.QIIME.sampling_depth}
        # stop_and_show:    
        
        
    alpha_rarefaction:
        module:                     qiime2_general
        base:                       phylogeny   # diversity
        script_path:                qiime diversity alpha-rarefaction
        tag:                        needs_sampling_depth
        redirects:
            --p-max-depth:          {Vars.QIIME.sampling_depth}
            --p-metrics:            [faith_pd,chao1,shannon,observed_otus]
            --p-steps:              40
        # stop_and_show:
        
    alpha_group_signif:
        module:                     qiime2_general
        base:                       diversity
        script_path:                qiime diversity alpha-group-significance

    # add_classifier:
        # module:             manage_types
        # base:               MergeReads
        # script_path:        
        # scope:              project
        # operation:          add
        # type:               TaxonomicClassifier
        # path:               {Vars.QIIME.classifier} 
        

    classify:
        module:                     qiime2_general
        base:                       dada2  #,add_classifier]
        script_path:                qiime feature-classifier classify-sklearn
        # stop_and_show:

    classify_tabulate:
        module:                     qiime2_general
        base:                       classify
        script_path:                qiime metadata tabulate 
        redirects:
            --m-input-file:         '{{FeatureData[Taxonomy]}}'

    classify_plot:
        module:                     qiime2_general
        base:                       classify
        script_path:                qiime taxa barplot
    
#### Gneiss
    gneiss_cor_clust:
        module:                     qiime2_general
        base:                       [filter_feature_table, Get_Project_Files]  # Addign metadata back again
        script_path:                qiime gneiss correlation-clustering
        # stop_and_show:
        
    gneiss_ilr_clust:
        module:                     qiime2_general
        base:                       gneiss_cor_clust
        script_path:                qiime gneiss ilr-hierarchical 
        # stop_and_show:
        
    gneiss_ols_reg:
        module:                     qiime2_general
        base:                       gneiss_ilr_clust
        script_path:                qiime gneiss ols-regression 
        redirects:  
            --p-formula:            '"Source"'
        # stop_and_show:


    gneiss_heatmap:
        module:                     qiime2_general
        base:                       gneiss_ols_reg
        script_path:                qiime gneiss dendrogram-heatmap
        redirects:  
            --p-color-map:          seismic 
            --m-metadata-column:    Source
        # stop_and_show:
    gneiss_balance_taxonomy:
        module:                     qiime2_general
        base:                       [gneiss_ols_reg,classify]
        script_path:                qiime gneiss balance-taxonomy
        redirects:  
            --m-metadata-column:    Source
            --p-taxa-level:         4 
            --p-balance-name:       "'y2'"
        # stop_and_show:

#### ANCOM

    ANCOM_mk_composition:
        module:                     qiime2_general
        base:                       dada2
        script_path:                qiime composition add-pseudocount
        
    ANCOM:
        module:                     qiime2_general
        base:                       ANCOM_mk_composition
        script_path:                qiime composition ancom
        redirects:  
            --m-metadata-column:    Source
            --p-difference-function:    f_statistic
